name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      NEXUS_URL: ${{ vars.NEXUS_URL }}
      DOCKER_NEXUS_DOMAIN: ${{ vars.DOCKER_NEXUS_DOMAIN }}

    steps:
      # Étape 1.1: Vérifier le code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 1.2: Installer JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Étape 2: Récupérer et valider settings.xml
      - name: Decode and validate Maven settings
        env:
          MAVEN_SETTINGS: ${{ vars.MAVEN_SETTINGS }}
        run: |
          echo "$MAVEN_SETTINGS" | base64 --decode > ~/.m2/settings.xml
          cat ~/.m2/settings.xml

      # Étape 3: Mettre en cache les dépendances Maven
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '~/.m2/settings.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Étape 4: Construire l'artefact Maven
      - name: Build with Maven
        run: mvn clean install -Denv.NEXUS_USERNAME=$NEXUS_USERNAME -Denv.NEXUS_PASSWORD=$NEXUS_PASSWORD -Denv.NEXUS_URL=$NEXUS_URL

      # Étape 5: Extraire la version du projet Maven
      - name: Extract Maven Project Version
        id: extract_version
        run: |
          PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          PROJECT_NAME=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)
          echo "PROJECT_VERSION=${PROJECT_VERSION}" >> $GITHUB_ENV
          echo "PROJECT_NAME=${PROJECT_NAME}" >> $GITHUB_ENV

      # Étape 6: Se connecter au registre Docker Nexus
      - name: Login to Nexus Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}
          registry: ${{ vars.DOCKER_NEXUS_DOMAIN }}

      # Étape 7: Construire et pousser l'image Docker
      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME="${{ vars.DOCKER_NEXUS_DOMAIN }}/${{ env.PROJECT_NAME }}:${{ env.PROJECT_VERSION }}"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      # Étape 8: Tester l'authentification Nexus
      # - name: Test Nexus Authentication
      #   run: |
      #     curl -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} \
      #     ${{ vars.NEXUS_URL }}/repository/maven-snapshots/

      # Étape 9: Déployer l'artefact Maven vers Nexus
      - name: Deploy Artifact to Nexus
        run: mvn deploy